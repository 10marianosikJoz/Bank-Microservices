server:
  port: 8080

spring:
  application:
    name: "account"
  profiles:
    active: "production"
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: #example
    password: #example
  jpa:
    show-sql: true
  sql:
    init:
      mode: "always"
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        publishNotification-out-0:
          destination: send-communication
      kafka:
        binder:
          brokers:
            - localhost:9092
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://host.docker.internal:8761/eureka/

info:
  app:
    name: "account"
    description: "Account Microservice"
    version: "1.0.0"

logging:
  level:
    com:
      marjoz:
        account: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 50
      maxWaitDuration: 500
  instances:
    serviceBulkhead:
      baseConfig: default